_Unwind_Backtrace: <text variable, no debug info>
_Unwind_Complete: void (_Unwind_Control_Block *)
_Unwind_DeleteException: void (_Unwind_Control_Block *)
_Unwind_ForcedUnwind: <text variable, no debug info>
_Unwind_GetCFA: _Unwind_Word (_Unwind_Context *)
_Unwind_GetDataRelBase: _Unwind_Ptr (_Unwind_Context *)
_Unwind_GetLanguageSpecificData: void *(_Unwind_Context *)
_Unwind_GetRegionStart: _Unwind_Ptr (_Unwind_Context *)
_Unwind_GetTextRelBase: _Unwind_Ptr (_Unwind_Context *)
_Unwind_RaiseException: <text variable, no debug info>
_Unwind_Resume: <text variable, no debug info>
_Unwind_Resume_or_Rethrow: <text variable, no debug info>
_Unwind_VRS_Get: _Unwind_VRS_Result (_Unwind_Context *, _Unwind_VRS_RegClass, _uw, _Unwind_VRS_DataRepresentation, void *)
_Unwind_VRS_Pop: _Unwind_VRS_Result (_Unwind_Context *, _Unwind_VRS_RegClass, _uw, _Unwind_VRS_DataRepresentation)
_Unwind_VRS_Set: _Unwind_VRS_Result (_Unwind_Context *, _Unwind_VRS_RegClass, _uw, _Unwind_VRS_DataRepresentation, void *)
___Unwind_Backtrace: <text variable, no debug info>
___Unwind_ForcedUnwind: <text variable, no debug info>
___Unwind_RaiseException: <text variable, no debug info>
___Unwind_Resume: <text variable, no debug info>
___Unwind_Resume_or_Rethrow: <text variable, no debug info>
__aeabi_idiv0: <text variable, no debug info>
__aeabi_ldiv0: <text variable, no debug info>
__aeabi_uidiv: <text variable, no debug info>
__aeabi_uidivmod: <text variable, no debug info>
__aeabi_unwind_cpp_pr0: _Unwind_Reason_Code (_Unwind_State, _Unwind_Control_Block *, _Unwind_Context *)
__aeabi_unwind_cpp_pr1: _Unwind_Reason_Code (_Unwind_State, _Unwind_Control_Block *, _Unwind_Context *)
__aeabi_unwind_cpp_pr2: _Unwind_Reason_Code (_Unwind_State, _Unwind_Control_Block *, _Unwind_Context *)
__gnu_Unwind_Backtrace: _Unwind_Reason_Code (_Unwind_Trace_Fn, void *, phase2_vrs *)
__gnu_Unwind_ForcedUnwind: _Unwind_Reason_Code (_Unwind_Control_Block *, _Unwind_Stop_Fn, void *, phase2_vrs *)
__gnu_Unwind_RaiseException: _Unwind_Reason_Code (_Unwind_Control_Block *, phase2_vrs *)
__gnu_Unwind_Restore_VFP: <text variable, no debug info>
__gnu_Unwind_Restore_VFP_D: <text variable, no debug info>
__gnu_Unwind_Restore_VFP_D_16_to_31: <text variable, no debug info>
__gnu_Unwind_Restore_WMMXC: <text variable, no debug info>
__gnu_Unwind_Restore_WMMXD: <text variable, no debug info>
__gnu_Unwind_Resume: _Unwind_Reason_Code (_Unwind_Control_Block *, phase2_vrs *)
__gnu_Unwind_Resume_or_Rethrow: _Unwind_Reason_Code (_Unwind_Control_Block *, phase2_vrs *)
__gnu_Unwind_Save_VFP: <text variable, no debug info>
__gnu_Unwind_Save_VFP_D: <text variable, no debug info>
__gnu_Unwind_Save_VFP_D_16_to_31: <text variable, no debug info>
__gnu_Unwind_Save_WMMXC: <text variable, no debug info>
__gnu_Unwind_Save_WMMXD: <text variable, no debug info>
__gnu_unwind_execute: _Unwind_Reason_Code (_Unwind_Context *, __gnu_unwind_state *)
__gnu_unwind_frame: _Unwind_Reason_Code (_Unwind_Control_Block *, _Unwind_Context *)
__netlink_data_: 0xXXXX
__restore_core_regs: <text variable, no debug info>
__udivsi3: <text variable, no debug info>
_ufc_dofinalperm: unsigned int *(unsigned int, unsigned int, unsigned int, unsigned int)
_ufc_keytab: {0, 0} <repeats 16 times>
_ufc_sb0: 0 <repeats 8192 times>
_ufc_sb1: 0 <repeats 8192 times>
_ufc_sb2: 0 <repeats 8192 times>
_ufc_sb3: 0 <repeats 8192 times>
nss_wrapper_enabled: bool (void)
nss_wrapper_hosts_enabled: bool (void)
rep_closefrom: int (int)
rep_freeifaddrs: void (struct ifaddrs *)
rep_get_current_dir_name: char *(void)
rep_getifaddrs: int (struct ifaddrs **)
rep_getpeereid: int (int, uid_t *, gid_t *)
rep_mkstemp: int (char *)
rep_setproctitle: void (const char *, ...)
rep_strlcat: size_t (char *, const char *, size_t)
rep_strlcpy: size_t (char *, const char *, size_t)
rep_strtoll: long long (const char *, char **, int)
rep_strtoull: unsigned long long (const char *, char **, int)
rep_swab: void (const void *, void *, ssize_t)
replace_dummy: void (void)
restore_core_regs: <text variable, no debug info>
socket_wrapper_enabled: bool (void)
tdb_add_flags: void (struct tdb_context *, unsigned int)
tdb_append: int (struct tdb_context *, TDB_DATA, TDB_DATA)
tdb_chainlock: int (struct tdb_context *, TDB_DATA)
tdb_chainlock_mark: int (struct tdb_context *, TDB_DATA)
tdb_chainlock_nonblock: int (struct tdb_context *, TDB_DATA)
tdb_chainlock_read: int (struct tdb_context *, TDB_DATA)
tdb_chainlock_read_nonblock: int (struct tdb_context *, TDB_DATA)
tdb_chainlock_unmark: int (struct tdb_context *, TDB_DATA)
tdb_chainunlock: int (struct tdb_context *, TDB_DATA)
tdb_chainunlock_read: int (struct tdb_context *, TDB_DATA)
tdb_check: int (struct tdb_context *, int (*)(TDB_DATA, TDB_DATA, void *), void *)
tdb_close: int (struct tdb_context *)
tdb_delete: int (struct tdb_context *, TDB_DATA)
tdb_dump_all: void (struct tdb_context *)
tdb_enable_seqnum: void (struct tdb_context *)
tdb_error: enum TDB_ERROR (struct tdb_context *)
tdb_errorstr: const char *(struct tdb_context *)
tdb_exists: int (struct tdb_context *, TDB_DATA)
tdb_fd: int (struct tdb_context *)
tdb_fetch: TDB_DATA (struct tdb_context *, TDB_DATA)
tdb_firstkey: TDB_DATA (struct tdb_context *)
tdb_freelist_size: int (struct tdb_context *)
tdb_get_flags: int (struct tdb_context *)
tdb_get_logging_private: void *(struct tdb_context *)
tdb_get_seqnum: int (struct tdb_context *)
tdb_hash_size: int (struct tdb_context *)
tdb_increment_seqnum_nonblock: void (struct tdb_context *)
tdb_jenkins_hash: unsigned int (TDB_DATA *)
tdb_lock_nonblock: int (struct tdb_context *, int, int)
tdb_lockall: int (struct tdb_context *)
tdb_lockall_mark: int (struct tdb_context *)
tdb_lockall_nonblock: int (struct tdb_context *)
tdb_lockall_read: int (struct tdb_context *)
tdb_lockall_read_nonblock: int (struct tdb_context *)
tdb_lockall_unmark: int (struct tdb_context *)
tdb_log_fn: tdb_log_func (struct tdb_context *)
tdb_map_size: size_t (struct tdb_context *)
tdb_name: const char *(struct tdb_context *)
tdb_nextkey: TDB_DATA (struct tdb_context *, TDB_DATA)
tdb_null: dptr = 0xXXXX, dsize = 0
tdb_open: struct tdb_context *(const char *, int, int, int, mode_t)
tdb_open_ex: struct tdb_context *(const char *, int, int, int, mode_t, const struct tdb_logging_context *, tdb_hash_func)
tdb_parse_record: int (struct tdb_context *, TDB_DATA, int (*)(TDB_DATA, TDB_DATA, void *), void *)
tdb_printfreelist: int (struct tdb_context *)
tdb_remove_flags: void (struct tdb_context *, unsigned int)
tdb_reopen: int (struct tdb_context *)
tdb_reopen_all: int (int)
tdb_repack: int (struct tdb_context *)
tdb_rescue: int (struct tdb_context *, void (*)(TDB_DATA, TDB_DATA, void *), void *)
tdb_runtime_check_for_robust_mutexes: bool (void)
tdb_set_logging_function: void (struct tdb_context *, const struct tdb_logging_context *)
tdb_set_max_dead: void (struct tdb_context *, int)
tdb_setalarm_sigptr: void (struct tdb_context *, volatile sig_atomic_t *)
tdb_store: int (struct tdb_context *, TDB_DATA, TDB_DATA, int)
tdb_summary: char *(struct tdb_context *)
tdb_transaction_cancel: int (struct tdb_context *)
tdb_transaction_commit: int (struct tdb_context *)
tdb_transaction_prepare_commit: int (struct tdb_context *)
tdb_transaction_start: int (struct tdb_context *)
tdb_transaction_start_nonblock: int (struct tdb_context *)
tdb_transaction_write_lock_mark: int (struct tdb_context *)
tdb_transaction_write_lock_unmark: int (struct tdb_context *)
tdb_traverse: int (struct tdb_context *, tdb_traverse_func, void *)
tdb_traverse_read: int (struct tdb_context *, tdb_traverse_func, void *)
tdb_unlock: int (struct tdb_context *, int, int)
tdb_unlockall: int (struct tdb_context *)
tdb_unlockall_read: int (struct tdb_context *)
tdb_validate_freelist: int (struct tdb_context *, int *)
tdb_wipe_all: int (struct tdb_context *)
ufc_crypt: char *(const char *, const char *)
uid_wrapper_enabled: bool (void)
